[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Aleksi\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Aleksi\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (AdoptOpenJDK Java 11.0.8)
[debug]       Load.loadUnit: plugins took 86.2099ms
[debug]       Load.loadUnit: defsScala took 0.3086ms
[debug] [Loading] Scanning directory C:\Users\Aleksi\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Aleksi\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.2304 ms
[debug]           Load.resolveProject(global-plugins) took 37.4161ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Aleksi\.sbt\1.0\plugins, plugins: List(<none>))) took 74.5779ms
[debug] [Loading] Done in C:\Users\Aleksi\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 91.5187ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1978ms
[debug]     Load.loadUnit(file:/C:/Users/Aleksi/.sbt/1.0/plugins/, ...) took 186.558ms
[debug]   Load.apply: load took 330.2968ms
[debug]   Load.apply: resolveProjects took 4.6952ms
[debug]   Load.apply: finalTransforms took 47.9188ms
[debug]   Load.apply: config.delegates took 5.799ms
[debug]   Load.apply: Def.make(settings)... took 567.2589ms
[debug]   Load.apply: structureIndex took 72.5756ms
[debug]   Load.apply: mkStreams took 1.1719ms
[info] loading global plugins from C:\Users\Aleksi\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2039.2217ms
[debug]           Load.loadUnit: plugins took 19.4497ms
[debug]           Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory C:\Users\Aleksi\IdeaProjects\sudokuProj\project
[debug]             Load.loadUnit: mkEval took 5.2815ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Aleksi\IdeaProjects\sudokuProj\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2994 ms
[info] loading settings for project sudokuproj-build from idea.sbt ...
[debug]               Load.resolveProject(sudokuproj-build) took 2.7689ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sudokuproj-build, base: C:\Users\Aleksi\IdeaProjects\sudokuProj\project, plugins: List(<none>))) took 4.471ms
[debug] [Loading] Done in C:\Users\Aleksi\IdeaProjects\sudokuProj\project, returning: (sudokuproj-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 96.1613ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.1358ms
[debug]         Load.loadUnit(file:/C:/Users/Aleksi/IdeaProjects/sudokuProj/project/, ...) took 119.4772ms
[debug]       Load.apply: load took 120.4672ms
[debug]       Load.apply: resolveProjects took 0.074ms
[debug]       Load.apply: finalTransforms took 6.7092ms
[debug]       Load.apply: config.delegates took 0.2532ms
[debug]       Load.apply: Def.make(settings)... took 56.575ms
[debug]       Load.apply: structureIndex took 22.2828ms
[debug]       Load.apply: mkStreams took 0.0022ms
[info] loading project definition from C:\Users\Aleksi\IdeaProjects\sudokuProj\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 962.8203ms
[debug]     Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory C:\Users\Aleksi\IdeaProjects\sudokuProj
[debug]       Load.loadUnit: mkEval took 0.1933ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Aleksi\IdeaProjects\sudokuProj, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.7566 ms
[info] loading settings for project sudokuproj from build.sbt ...
[debug]         Load.resolveProject(sudokuproj) took 19.7717ms
[debug]       Load.loadTransitive: finalizeProject(Project(id sudokuproj, base: C:\Users\Aleksi\IdeaProjects\sudokuProj, plugins: List(<none>))) took 22.3453ms
[debug] [Loading] Done in C:\Users\Aleksi\IdeaProjects\sudokuProj, returning: (sudokuproj)
[debug]     Load.loadUnit: loadedProjectsRaw took 1783.9408ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.1162ms
[debug]   Load.loadUnit(file:/C:/Users/Aleksi/IdeaProjects/sudokuProj/, ...) took 2755.3495ms
[debug] Load.apply: load took 2756.7223ms
[debug] Load.apply: resolveProjects took 0.1246ms
[debug] Load.apply: finalTransforms took 17.9059ms
[debug] Load.apply: config.delegates took 0.6131ms
[debug] Load.apply: Def.make(settings)... took 43.4257ms
[debug] Load.apply: structureIndex took 17.7653ms
[debug] Load.apply: mkStreams took 0.0019ms
[info] set current project to sudokuProj (in build file:/C:/Users/Aleksi/IdeaProjects/sudokuProj/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60956 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60956, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to sudokuProj (in build file:/C:/Users/Aleksi/IdeaProjects/sudokuProj/)
[debug] > Exec(idea-shell, None, None)
